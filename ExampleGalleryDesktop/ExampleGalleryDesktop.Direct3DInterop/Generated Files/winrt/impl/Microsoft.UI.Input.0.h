// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210806.1

#pragma once
#ifndef WINRT_Microsoft_UI_Input_0_H
#define WINRT_Microsoft_UI_Input_0_H
WINRT_EXPORT namespace winrt::Windows::System
{
    enum class VirtualKey : int32_t;
}
WINRT_EXPORT namespace winrt::Windows::UI::Core
{
    enum class CoreVirtualKeyStates : uint32_t;
}
WINRT_EXPORT namespace winrt::Microsoft::UI::Input
{
    struct IKeyboardInputStatics;
    struct KeyboardInput;
}
namespace winrt::impl
{
    template <> struct category<winrt::Microsoft::UI::Input::IKeyboardInputStatics>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Input::KeyboardInput>{ using type = class_category; };
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Input::KeyboardInput> = L"Microsoft.UI.Input.KeyboardInput";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Input::IKeyboardInputStatics> = L"Microsoft.UI.Input.IKeyboardInputStatics";
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Input::IKeyboardInputStatics>{ 0xC787F6F9,0x0392,0x53E1,{ 0x90,0x32,0x51,0xD3,0x1C,0xE6,0xA8,0x4A } }; // C787F6F9-0392-53E1-9032-51D31CE6A84A
    template <> struct abi<winrt::Microsoft::UI::Input::IKeyboardInputStatics>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall GetKeyStateForCurrentThread(int32_t, uint32_t*) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_Microsoft_UI_Input_IKeyboardInputStatics
    {
        WINRT_IMPL_AUTO(winrt::Windows::UI::Core::CoreVirtualKeyStates) GetKeyStateForCurrentThread(winrt::Windows::System::VirtualKey const& virtualKey) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Input::IKeyboardInputStatics>
    {
        template <typename D> using type = consume_Microsoft_UI_Input_IKeyboardInputStatics<D>;
    };
}
#endif
