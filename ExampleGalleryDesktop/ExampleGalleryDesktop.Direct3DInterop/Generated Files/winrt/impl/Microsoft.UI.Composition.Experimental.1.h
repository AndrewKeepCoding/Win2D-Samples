// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210806.1

#pragma once
#ifndef WINRT_Microsoft_UI_Composition_Experimental_1_H
#define WINRT_Microsoft_UI_Composition_Experimental_1_H
#include "winrt/impl/Microsoft.UI.Composition.Experimental.0.h"
WINRT_EXPORT namespace winrt::Microsoft::UI::Composition::Experimental
{
    struct __declspec(empty_bases) IExpCompositionContent :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpCompositionContent>
    {
        IExpCompositionContent(std::nullptr_t = nullptr) noexcept {}
        IExpCompositionContent(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpCompositionContentAutomationProviderRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpCompositionContentAutomationProviderRequestedEventArgs>
    {
        IExpCompositionContentAutomationProviderRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpCompositionContentAutomationProviderRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpCompositionContentEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpCompositionContentEventArgs>
    {
        IExpCompositionContentEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpCompositionContentEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpCompositionContentFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpCompositionContentFactory>
    {
        IExpCompositionContentFactory(std::nullptr_t = nullptr) noexcept {}
        IExpCompositionContentFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpCompositionContentSite :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpCompositionContentSite>
    {
        IExpCompositionContentSite(std::nullptr_t = nullptr) noexcept {}
        IExpCompositionContentSite(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpCompositionContentSiteEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpCompositionContentSiteEventArgs>
    {
        IExpCompositionContentSiteEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpCompositionContentSiteEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpCompositionContentSiteFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpCompositionContentSiteFactory>
    {
        IExpCompositionContentSiteFactory(std::nullptr_t = nullptr) noexcept {}
        IExpCompositionContentSiteFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpCompositionContentStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpCompositionContentStatics>
    {
        IExpCompositionContentStatics(std::nullptr_t = nullptr) noexcept {}
        IExpCompositionContentStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpCompositionPropertyChanged :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpCompositionPropertyChanged>
    {
        IExpCompositionPropertyChanged(std::nullptr_t = nullptr) noexcept {}
        IExpCompositionPropertyChanged(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpCompositionPropertyChangedListener :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpCompositionPropertyChangedListener>
    {
        IExpCompositionPropertyChangedListener(std::nullptr_t = nullptr) noexcept {}
        IExpCompositionPropertyChangedListener(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpCompositionVisualSurfaceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpCompositionVisualSurfaceStatics>
    {
        IExpCompositionVisualSurfaceStatics(std::nullptr_t = nullptr) noexcept {}
        IExpCompositionVisualSurfaceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpCompositor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpCompositor>
    {
        IExpCompositor(std::nullptr_t = nullptr) noexcept {}
        IExpCompositor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpContentTopLevelHost :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpContentTopLevelHost>
    {
        IExpContentTopLevelHost(std::nullptr_t = nullptr) noexcept {}
        IExpContentTopLevelHost(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpVisual :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpVisual>
    {
        IExpVisual(std::nullptr_t = nullptr) noexcept {}
        IExpVisual(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
