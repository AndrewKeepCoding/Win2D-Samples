// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210806.1

#pragma once
#ifndef WINRT_Microsoft_UI_Input_Experimental_1_H
#define WINRT_Microsoft_UI_Input_Experimental_1_H
#include "winrt/impl/Microsoft.UI.Input.Experimental.0.h"
WINRT_EXPORT namespace winrt::Microsoft::UI::Input::Experimental
{
    struct __declspec(empty_bases) IExpContextMenuKeyEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpContextMenuKeyEventArgs>
    {
        IExpContextMenuKeyEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpContextMenuKeyEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpCrossSlidingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpCrossSlidingEventArgs>
    {
        IExpCrossSlidingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpCrossSlidingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpDirectManipulation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpDirectManipulation>
    {
        IExpDirectManipulation(std::nullptr_t = nullptr) noexcept {}
        IExpDirectManipulation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpDirectManipulationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpDirectManipulationStatics>
    {
        IExpDirectManipulationStatics(std::nullptr_t = nullptr) noexcept {}
        IExpDirectManipulationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpDraggingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpDraggingEventArgs>
    {
        IExpDraggingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpDraggingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpFocusChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpFocusChangedEventArgs>
    {
        IExpFocusChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpFocusChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpFocusController :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpFocusController>
    {
        IExpFocusController(std::nullptr_t = nullptr) noexcept {}
        IExpFocusController(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpFocusControllerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpFocusControllerStatics>
    {
        IExpFocusControllerStatics(std::nullptr_t = nullptr) noexcept {}
        IExpFocusControllerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpFocusNavigationHost :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpFocusNavigationHost>
    {
        IExpFocusNavigationHost(std::nullptr_t = nullptr) noexcept {}
        IExpFocusNavigationHost(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpFocusNavigationHostStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpFocusNavigationHostStatics>
    {
        IExpFocusNavigationHostStatics(std::nullptr_t = nullptr) noexcept {}
        IExpFocusNavigationHostStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpFocusNavigationRequest :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpFocusNavigationRequest>
    {
        IExpFocusNavigationRequest(std::nullptr_t = nullptr) noexcept {}
        IExpFocusNavigationRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpFocusNavigationRequestStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpFocusNavigationRequestStatics>
    {
        IExpFocusNavigationRequestStatics(std::nullptr_t = nullptr) noexcept {}
        IExpFocusNavigationRequestStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpFocusNavigationResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpFocusNavigationResult>
    {
        IExpFocusNavigationResult(std::nullptr_t = nullptr) noexcept {}
        IExpFocusNavigationResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpFocusObserver :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpFocusObserver>
    {
        IExpFocusObserver(std::nullptr_t = nullptr) noexcept {}
        IExpFocusObserver(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpFocusObserverStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpFocusObserverStatics>
    {
        IExpFocusObserverStatics(std::nullptr_t = nullptr) noexcept {}
        IExpFocusObserverStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpGestureRecognizer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpGestureRecognizer>
    {
        IExpGestureRecognizer(std::nullptr_t = nullptr) noexcept {}
        IExpGestureRecognizer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpHoldingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpHoldingEventArgs>
    {
        IExpHoldingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpHoldingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpIndependentPointerInputObserver :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpIndependentPointerInputObserver>
    {
        IExpIndependentPointerInputObserver(std::nullptr_t = nullptr) noexcept {}
        IExpIndependentPointerInputObserver(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpIndependentPointerInputObserverStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpIndependentPointerInputObserverStatics>
    {
        IExpIndependentPointerInputObserverStatics(std::nullptr_t = nullptr) noexcept {}
        IExpIndependentPointerInputObserverStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpInputActivationListener :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpInputActivationListener>
    {
        IExpInputActivationListener(std::nullptr_t = nullptr) noexcept {}
        IExpInputActivationListener(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpInputActivationListenerActivationChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpInputActivationListenerActivationChangedEventArgs>
    {
        IExpInputActivationListenerActivationChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpInputActivationListenerActivationChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpInputActivationListenerPartnerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpInputActivationListenerPartnerStatics>
    {
        IExpInputActivationListenerPartnerStatics(std::nullptr_t = nullptr) noexcept {}
        IExpInputActivationListenerPartnerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpInputObject :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpInputObject>
    {
        IExpInputObject(std::nullptr_t = nullptr) noexcept {}
        IExpInputObject(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpInputObjectFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpInputObjectFactory>
    {
        IExpInputObjectFactory(std::nullptr_t = nullptr) noexcept {}
        IExpInputObjectFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpInputSite :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpInputSite>
    {
        IExpInputSite(std::nullptr_t = nullptr) noexcept {}
        IExpInputSite(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpKeyboardInput :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpKeyboardInput>
    {
        IExpKeyboardInput(std::nullptr_t = nullptr) noexcept {}
        IExpKeyboardInput(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpKeyboardInputStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpKeyboardInputStatics>
    {
        IExpKeyboardInputStatics(std::nullptr_t = nullptr) noexcept {}
        IExpKeyboardInputStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpManipulationCompletedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpManipulationCompletedEventArgs>
    {
        IExpManipulationCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpManipulationCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpManipulationInertiaStartingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpManipulationInertiaStartingEventArgs>
    {
        IExpManipulationInertiaStartingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpManipulationInertiaStartingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpManipulationStartedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpManipulationStartedEventArgs>
    {
        IExpManipulationStartedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpManipulationStartedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpManipulationUpdatedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpManipulationUpdatedEventArgs>
    {
        IExpManipulationUpdatedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpManipulationUpdatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpMouseCapture :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpMouseCapture>
    {
        IExpMouseCapture(std::nullptr_t = nullptr) noexcept {}
        IExpMouseCapture(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpMouseCaptureStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpMouseCaptureStatics>
    {
        IExpMouseCaptureStatics(std::nullptr_t = nullptr) noexcept {}
        IExpMouseCaptureStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpMouseWheelParameters :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpMouseWheelParameters>
    {
        IExpMouseWheelParameters(std::nullptr_t = nullptr) noexcept {}
        IExpMouseWheelParameters(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpNavigateFocusRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpNavigateFocusRequestedEventArgs>
    {
        IExpNavigateFocusRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpNavigateFocusRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpPointerCursorController :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpPointerCursorController>
    {
        IExpPointerCursorController(std::nullptr_t = nullptr) noexcept {}
        IExpPointerCursorController(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpPointerCursorControllerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpPointerCursorControllerStatics>
    {
        IExpPointerCursorControllerStatics(std::nullptr_t = nullptr) noexcept {}
        IExpPointerCursorControllerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpPointerEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpPointerEventArgs>
    {
        IExpPointerEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpPointerEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpPointerInputObserver :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpPointerInputObserver>
    {
        IExpPointerInputObserver(std::nullptr_t = nullptr) noexcept {}
        IExpPointerInputObserver(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpPointerInputObserverFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpPointerInputObserverFactory>
    {
        IExpPointerInputObserverFactory(std::nullptr_t = nullptr) noexcept {}
        IExpPointerInputObserverFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpPointerInputObserverStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpPointerInputObserverStatics>
    {
        IExpPointerInputObserverStatics(std::nullptr_t = nullptr) noexcept {}
        IExpPointerInputObserverStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpPointerPoint :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpPointerPoint>
    {
        IExpPointerPoint(std::nullptr_t = nullptr) noexcept {}
        IExpPointerPoint(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpPointerPointProperties :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpPointerPointProperties>
    {
        IExpPointerPointProperties(std::nullptr_t = nullptr) noexcept {}
        IExpPointerPointProperties(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpPointerPointStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpPointerPointStatics>
    {
        IExpPointerPointStatics(std::nullptr_t = nullptr) noexcept {}
        IExpPointerPointStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpRightTappedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpRightTappedEventArgs>
    {
        IExpRightTappedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpRightTappedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpTappedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpTappedEventArgs>
    {
        IExpTappedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpTappedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpTouchHitTestingProvider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpTouchHitTestingProvider>
    {
        IExpTouchHitTestingProvider(std::nullptr_t = nullptr) noexcept {}
        IExpTouchHitTestingProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExpTouchHitTestingProviderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpTouchHitTestingProviderStatics>
    {
        IExpTouchHitTestingProviderStatics(std::nullptr_t = nullptr) noexcept {}
        IExpTouchHitTestingProviderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
