// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210806.1

#pragma once
#ifndef WINRT_Microsoft_UI_Input_H
#define WINRT_Microsoft_UI_Input_H
#include "winrt/base.h"
static_assert(winrt::check_version(CPPWINRT_VERSION, "2.0.210806.1"), "Mismatched C++/WinRT headers.");
#define CPPWINRT_VERSION "2.0.210806.1"
#include "winrt/Microsoft.UI.h"
#include "winrt/impl/Windows.System.2.h"
#include "winrt/impl/Windows.UI.Core.2.h"
#include "winrt/impl/Microsoft.UI.Input.2.h"
namespace winrt::impl
{
    template <typename D> WINRT_IMPL_AUTO(winrt::Windows::UI::Core::CoreVirtualKeyStates) consume_Microsoft_UI_Input_IKeyboardInputStatics<D>::GetKeyStateForCurrentThread(winrt::Windows::System::VirtualKey const& virtualKey) const
    {
        winrt::Windows::UI::Core::CoreVirtualKeyStates result{};
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::UI::Input::IKeyboardInputStatics)->GetKeyStateForCurrentThread(static_cast<int32_t>(virtualKey), reinterpret_cast<uint32_t*>(&result)));
        return result;
    }
#ifndef WINRT_LEAN_AND_MEAN
    template <typename D>
    struct produce<D, winrt::Microsoft::UI::Input::IKeyboardInputStatics> : produce_base<D, winrt::Microsoft::UI::Input::IKeyboardInputStatics>
    {
        int32_t __stdcall GetKeyStateForCurrentThread(int32_t virtualKey, uint32_t* result) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            *result = detach_from<winrt::Windows::UI::Core::CoreVirtualKeyStates>(this->shim().GetKeyStateForCurrentThread(*reinterpret_cast<winrt::Windows::System::VirtualKey const*>(&virtualKey)));
            return 0;
        }
        catch (...) { return to_hresult(); }
    };
#endif
}
WINRT_EXPORT namespace winrt::Microsoft::UI::Input
{
    inline auto KeyboardInput::GetKeyStateForCurrentThread(winrt::Windows::System::VirtualKey const& virtualKey)
    {
        return impl::call_factory<KeyboardInput, IKeyboardInputStatics>([&](IKeyboardInputStatics const& f) { return f.GetKeyStateForCurrentThread(virtualKey); });
    }
}
namespace std
{
#ifndef WINRT_LEAN_AND_MEAN
    template<> struct hash<winrt::Microsoft::UI::Input::IKeyboardInputStatics> : winrt::impl::hash_base {};
    template<> struct hash<winrt::Microsoft::UI::Input::KeyboardInput> : winrt::impl::hash_base {};
#endif
}
#endif
